apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.kotlin.android.extensions'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"
    }
}

repositories {
    maven { url 'https://maven.google.com/' }
}

androidExtensions {
    experimental = true
}

configurations {
    ktlint
}

kapt {
    generateStubs = true
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "co.uk.androidrecruitmenttask"
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }

    flavorDimensions "mode"

    productFlavors {
        develop {
            dimension "mode"
            applicationIdSuffix ".develop"
            versionNameSuffix "-develop"
            buildConfigField 'String', 'BASE_URL', START_WARS_ENDPOINT
            resValue 'string', 'app_name', 'StarWars-develop'
        }
        production {
            dimension "mode"
            buildConfigField 'String', 'BASE_URL', START_WARS_ENDPOINT
            resValue 'string', 'app_name', 'StarWars'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        release.java.srcDirs += 'src/release/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        main.res.srcDirs += [
                'src/main/res/layouts',
                'src/main/res/layouts/activity',
                'src/main/res/layouts/fragment',
        ]
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$KOTLIN_VERSION"
    //Ktlint
    ktlint "com.github.shyiko:ktlint:$KTLINT_VERSION"
    //Espresso
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //Junit
    testImplementation "junit:junit:$JUNIT_VERSION"
    //Mockito
    testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"
    implementation "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"
    //RxJava2
    implementation "io.reactivex.rxjava2:rxjava:$RXJAVA_VERSION"
    implementation "io.reactivex.rxjava2:rxandroid:$RXANDROID_VERSION"
    //ButterKnife
    implementation "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    kapt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"
    //Dagger
    implementation "com.google.dagger:dagger:$DAGGER2_VERSION"
    kapt "com.google.dagger:dagger-compiler:$DAGGER2_VERSION"
    implementation "com.google.dagger:dagger-android:$DAGGER2_VERSION"
    implementation "com.google.dagger:dagger-android-support:$DAGGER2_VERSION"
    kapt "com.google.dagger:dagger-android-processor:$DAGGER2_VERSION"
    //Support
    implementation "com.android.support:appcompat-v7:$SUPPORT_VERSION"
    implementation "com.android.support:recyclerview-v7:$SUPPORT_VERSION"
    implementation "com.android.support:design:$SUPPORT_VERSION"
    implementation "com.android.support.constraint:constraint-layout:$CONSTRAINT_VERSION"
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}